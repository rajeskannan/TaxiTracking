{
  "name": "pdf-text-extract",
  "version": "1.0.7",
  "description": "# Extract text from pdfs that contain searchable pdf text",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/nisaacson/pdf-text-extract.git"
  },
  "keywords": [
    "pdf",
    "extract",
    "pdftotext",
    "text",
    "extract"
  ],
  "author": {
    "name": "Noah Isaacson"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "devDependencies": {
    "mocha": "~1.8.2",
    "should": "~1.2.2"
  },
  "readme": "# PDF Text Extract\nExtract text from pdfs that contain searchable pdf text. The module calls the pdftotext command to perform the actual extraction\n[![build status](https://secure.travis-ci.org/nisaacson/pdf-text-extract)](http://travis-ci.org/nisaacson/pdf-text-extract) [![Dependency Status](https://david-dm.org/nisaacson/pdf-text-extract.png)](https://david-dm.org/nisaacson/pdf-text-extract)\n\n# Installation\n```bash\nnpm install pdf-text-extract\n```\nYou will need the **pdftotext** binary available on your path. There are packages available for many different operating systems\n\n# Usage\n```javascript\nvar filePath = path.join(__dirname, 'test/pdf')\nvar extract = require('pdf-text-extract')\nextract(filePath, function (err, pages) {\n  if (err) {\n    console.dir(err)\n    return\n  }\n  console.dir('extracted pages', pages)\n})\n```\nThe output will be an array of where each entry is a page of text. If you want just a string of all pages you can do `pages.join(' ')`\n\n\n\n# Test\n",
  "bugs": {
    "url": "https://github.com/nisaacson/pdf-text-extract/issues"
  },
  "homepage": "https://github.com/nisaacson/pdf-text-extract",
  "_id": "pdf-text-extract@1.0.7",
  "dist": {
    "shasum": "7792127965952e3fca7fdfca006ce93027e8cdb5"
  },
  "_from": "pdf-text-extract@1.0.7",
  "_resolved": "https://registry.npmjs.org/pdf-text-extract/-/pdf-text-extract-1.0.7.tgz"
}
