{
  "name": "j",
  "version": "0.2.13",
  "author": {
    "name": "sheetjs"
  },
  "description": "data wrangler",
  "keywords": [
    "xls",
    "xlsx",
    "xlsm",
    "xlsb",
    "office",
    "excel",
    "spreadsheet"
  ],
  "bin": {
    "j": "./bin/j.njs"
  },
  "main": "./j",
  "dependencies": {
    "xlsjs": ">=0.6.9-c",
    "xlsx": "~0.5.10",
    "commander": ""
  },
  "devDependencies": {
    "mocha": ""
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/SheetJS/j.git"
  },
  "scripts": {
    "test": "make mocha"
  },
  "bugs": {
    "url": "https://github.com/SheetJS/j/issues"
  },
  "license": "Apache-2.0",
  "engines": {
    "node": ">=0.8"
  },
  "readme": "# J\n\nSimple data wrapper that attempts to wrap [xlsjs](http://npm.im/xlsjs) and [xlsx](http://npm.im/xlsx) to provide a uniform way to access data from Excel files.\n\nExcel files are parsed based on the content (not by filename).  For example, CSV files can be renamed to .XLS and excel will do the right thing.\n\nSupported Formats:\n\n| Format                  | Library |\n| :---------------------- | :------ |\n| XLS (BIFF8, 97-2003)    | JS-XLS  |\n| XLSX (2007+)            | JS-XLSX |\n| XLSM (2007+ w/macros)   | JS-XLSX |\n| XLSB (2007+ binary)     | JS-XLSX |\n| XML (2003/2004, basic)  | JS-XLS  |\n\nOutput formats:\n- XML and HTML work with [Excel Web Query](http://office.microsoft.com/en-us/excel-help/get-and-analyze-data-from-the-web-in-excel-HA001054848.aspx)\n- CSV (and other delimited formats such as TSV)\n- JSON\n- Formulae list (e.g. `A1=NOW()`, `A2=A1+3`)\n\n## Installation\n\n```\nnpm install -g j\n```\n\n## Node Library\n\n```\nvar J = require('j');\n```\n\n`J.readFile(filename)` opens the file specified by filename and returns an array\nwhose first object is the parsing object (XLS or XLSX) and whose second object\nis the parsed file.  \n\n`J.utils` has various helpers that expect an array like those from readFile:\n\n- `to_csv(w) / to_dsv(w, delim)` will generate CSV/DSV respectively\n- `to_json(w)` will generate JSON row objects\n- `to_html(w)` will generate simple HTML tables\n- `to_xml(w)` will generate simple XML \n\n## CLI Tool \n\nThe node module ships with a binary `j` which has a help message:\n\n```\n$ j --help\n\n  Usage: j.njs [options] <file> [sheetname]\n\n  Options:\n\n    -h, --help             output usage information\n    -V, --version          output the version number\n    -f, --file <file>      use specified workbook\n    -s, --sheet <sheet>    print specified sheet (default first sheet)\n    -l, --list-sheets      list sheet names and exit\n    -S, --formulae         print formulae\n    -j, --json             emit formatted JSON rather than CSV (all fields text)\n    -J, --raw-js           emit raw JS object rather than CSV (raw numbers)\n    -X, --xml              emit XML rather than CSV\n    -H, --html             emit HTML rather than CSV\n    -F, --field-sep <sep>  CSV field separator\n    -R, --row-sep <sep>    CSV row separator\n    --dev                  development mode\n    --read                 read but do not print out contents\n    -q, --quiet            quiet mode\n\n  Support email: dev@sheetjs.com\n  Web Demo: http://oss.sheetjs.com/\n```\n\n\n## License\n\nPlease consult the attached LICENSE file for details.  All rights not explicitly granted by the Apache 2.0 license are reserved by the Original Author.\n\n[![githalytics.com alpha](https://cruel-carlota.pagodabox.com/cb2e495863d0096f50a923515c7331b6 \"githalytics.com\")](http://githalytics.com/SheetJS/j)\n\n## Using J for diffing XLS/XLSB/XLSM/XLSX files\n\nUsing git textconv, you can use `J` to generate more meaningful diffs!\n\nOne-time configuration (`misc/gitdiff.sh`):\n\n```\n#!/bin/bash\n\n# Define a sheetjs diff type that uses j\ngit config --global diff.sheetjs.textconv \"j\"\n\n# Configure a user .gitattributes file that maps the xls{,x,m} files\ntouch ~/.gitattributes\ncat <<EOF >>~/.gitattributes\n*.xls diff=sheetjs\n*.xlsb diff=sheetjs\n*.xlsm diff=sheetjs\n*.xlsx diff=sheetjs\n*.XLS diff=sheetjs\n*.XLSB diff=sheetjs\n*.XLSM diff=sheetjs\n*.XLSX diff=sheetjs\nEOF\n\n# Set the .gitattributes to be used for all repos on the system:\ngit config --global core.attributesfile '~/.gitattributes'\n```\n\nIf you just want to compare formulae (for example, in a sheet using `NOW`):\n\n```\ngit config --global diff.sheetjs.textconv \"j -S\"\n```\n\n\nNOTE: There are some known issues regarding global modules in Windows.  The best\nbet is to `npm install j` in your git directory before diffing.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/SheetJS/j",
  "_id": "j@0.2.13",
  "dist": {
    "shasum": "642168bfc54cd5d3e9de4343c832956217de3883"
  },
  "_from": "j@0.2.13",
  "_resolved": "https://registry.npmjs.org/j/-/j-0.2.13.tgz"
}
